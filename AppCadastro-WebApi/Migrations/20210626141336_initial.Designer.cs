// <auto-generated />
using AppCadastro_WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppCadastro_WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210626141336_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppCadastro_WebApi.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataInc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dataNasc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tratamento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            id = 1,
                            cpf = "111.222.333-44",
                            dataInc = "19/06/2021 10:21",
                            dataNasc = "01/01/1990",
                            nome = "Jander",
                            status = "Ativo",
                            tipo = "Pessoa Fisica",
                            tratamento = "Jander Raul"
                        },
                        new
                        {
                            id = 2,
                            cpf = "222.333.444-55",
                            dataInc = "19/06/2021 10:22",
                            dataNasc = "02/02/1991",
                            nome = "Raul",
                            status = "Ativo",
                            tipo = "Pessoa Fisica",
                            tratamento = "Raul Raul"
                        });
                });

            modelBuilder.Entity("AppCadastro_WebApi.Models.ClienteEnd", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId", "EnderecoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("ClienteEnd");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            EnderecoId = 1
                        },
                        new
                        {
                            ClienteId = 2,
                            EnderecoId = 2
                        });
                });

            modelBuilder.Entity("AppCadastro_WebApi.Models.Endereco", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Endereco");

                    b.HasData(
                        new
                        {
                            id = 1,
                            bairro = "Pinheiros",
                            cep = "14.000-000",
                            cidade = "Ribeirão Preto",
                            complemento = "Casa",
                            endereco = "Rua Numero 1",
                            estado = "São Paulo",
                            numero = "100",
                            status = "Ativo"
                        },
                        new
                        {
                            id = 2,
                            bairro = "Palmas",
                            cep = "14.000-010",
                            cidade = "Ribeirão Preto",
                            complemento = "Ap-32, 3° Andar",
                            endereco = "Rua Numero 2",
                            estado = "São Paulo",
                            numero = "120",
                            status = "Ativo"
                        });
                });

            modelBuilder.Entity("AppCadastro_WebApi.Models.ClienteEnd", b =>
                {
                    b.HasOne("AppCadastro_WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AppCadastro_WebApi.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Endereco");
                });
#pragma warning restore 612, 618
        }
    }
}
